name: Python Type Checking

on:
  workflow_call:
    inputs:
      environment_file:
        description: filename of conda env file
        required: false
        type: string
        default: environment.yml
      requirements_file:
        description: filename of requirements.txt file, if frozen dependencies are desired
        type: string
        required: false
      extra_index_urls:
        description: additional index URLs, comma-separated, to use when pip installing
        type: string
        required: false
      python_versions:
        description: string containing a JSON array of versions
        required: false
        type: string
        default: '["3.9"]'
      install_types:
        description: whether to use mypy to install type stubs
        required: false
        type: boolean
        default: true
      pip_install_args:
        description: args to pass to pip install
        required: false
        type: string
        default: ''
      path:
        type: string
        description: Path of package, relative to the repo root
        required: false
        default: '.'
      package_specification:
        description: Specification of how to install the package, such as '.[tests]'
        required: false
        type: string
        default: .[tests]

jobs:
  python-mypy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ fromJson(inputs.python_versions) }}

    defaults:
      run:
        # Necessary for the mamba-org/provision-with-micromamba action
        shell: bash --login -eo pipefail {0}

    env:
      LD_LIBRARY_PATH: /home/runner/micromamba/envs/bindgen/lib:$LD_LIBRARY_PATH
      PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu

    steps:
      - uses: actions/checkout@v2

      # Configure conda if an environment file is provided
      - name: Set up micromamba
        if: ${{ inputs.environment_file != '' }}
        uses: mamba-org/provision-with-micromamba@v15
        with:
          cache-downloads: true
          cache-downloads-key: "mamba-${{ hashFiles(inputs.environment_file) }}"
          environment-file: ./${{ inputs.path }}/${{ inputs.environment_file }}
          environment-name: typecheck
          cache-env: true
          extra-specs: |
            python=${{ matrix.python-version }}

      # Configure conda if an environment file is not provided
      - name: Set up micromamba
        if: ${{ inputs.environment_file == '' }}
        uses: mamba-org/provision-with-micromamba@v15
        with:
          environment-file: false
          environment-name: typecheck
          cache-env: true
          channels: main
          extra-specs: |
            python=${{ matrix.python-version }}

      - name: Cache pip downloads
        uses: actions/cache@v3
        with:
          path: "~/.cache/pip"
          key: "pip-${{ hashFiles('setup.cfg') }}"
          restore-keys: |
            pip-${{ hashFiles('setup.cfg') }}
            pip-

      - name: Extra Index URLs
        run: export EXTRA_INDEX_URL=${{ inputs.extra_index_url }}

      - name: Install package
        working-directory: ./${{ inputs.path }}
        run: python -m pip install ${{ inputs.pip_install_args }} ${{ inputs.package_specification }}
        if: ${{ !inputs.requirements_file }}

      - name: Install from requirements file
        working-directory: ./${{ inputs.path }}
        run: python -m pip install --no-deps ${{ inputs.pip_install_args }} -r ${{ inputs.requirements_file }}
        if: ${{ inputs.requirements_file }}

      - name: Mypy Type Install
        working-directory: ./${{ inputs.path }}
        run: mkdir -p .mypy_cache && python -m mypy --install-types --non-interactive
        if: ${{ inputs.install_types }}

      - name: Mypy
        working-directory: ./${{ inputs.path }}
        run: python -m mypy src
